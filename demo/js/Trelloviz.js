if("undefined"==typeof Trelloviz)var Trelloviz={};
Trelloviz.viewModel={apiKey:ko.observable(""),loggedIn:ko.observable(!1),showSpinner:ko.observable(!1),fullTrelloUserName:ko.observable(""),trelloLists:ko.observableArray(),html5LocalStorageAvailable:ko.observable(!1),core_option_keepArchiveCards:ko.observable(!1),areaChart:null,vizDataForJit:null,showConfigPanel:ko.observable(!1),toggleConfigApiKeyPanelVisible:function(){var a=Trelloviz.viewModel.showConfigPanel();Trelloviz.viewModel.showConfigPanel(!a)},actionListsUpdated:function(){this.updateVizDataFromTrelloListsSettings();
this.areaChart.loadJSON(this.vizDataForJit)},updateVizDataFromTrelloListsSettings:function(){for(var a=this.trelloLists(),b=this.vizDataForJit,c=a.length;c--;)b.color[c]=a[c].color()},actionLogIn:function(){var a=Trelloviz.viewModel.apiKey();null!=a&&32==a.length?(Trelloviz.viewModel.showConfigPanel(!1),jQuery.getScript("https://api.trello.com/1/client.js?key="+a,Trelloviz.trelloLogin)):Trelloviz.viewModel.showConfigPanel(!0)},actionLogOut:function(){Trelloviz.viewModel.loggedIn(!1);Trello.deauthorize()},
actionSaveApiKeyToLocalStorage:function(){localStorage.trelloviz_api_key=this.apiKey()},setNewData:function(a){Trelloviz.viewModel.showSpinner(!1);var b={};b.keepArchivedCards=Trelloviz.viewModel.core_option_keepArchiveCards();b=new Trelloviz.Core.Engine(b);Trelloviz.viewModel.vizDataForJit=b.computeVizData_all_lists(a);Trelloviz.viewModel.areaChart=Trelloviz.showGraphic(Trelloviz.viewModel.vizDataForJit);a=b.retrieveListsWithNaturalOrder();a.forEach(function(a){a.color=ko.observable(a.color)});Trelloviz.viewModel.trelloLists(a)}};
Trelloviz.trelloLoadAndShowUserInfo=function(){this.viewModel.showSpinner(!0);Trello.members.get("me",function(a){Trelloviz.viewModel.fullTrelloUserName(a.fullName);Trelloviz.viewModel.showSpinner(!1)})};Trelloviz.trelloLoadAndShowBoards=function(){this.viewModel.showSpinner(!0);Trello.get("members/me/boards",{},Trelloviz.showBoards)};
Trelloviz.onAuthorize=function(){Trelloviz.viewModel.showSpinner(!1);var a="undefined"!=typeof Trello&&Trello.authorized();Trelloviz.viewModel.loggedIn(a);a&&(Trelloviz.trelloLoadAndShowUserInfo(),$("#loggedin").fadeIn().delay(2E3).fadeOut(),Trelloviz.trelloLoadAndShowBoards())};Trelloviz.onAuthorizeError=function(){Trelloviz.viewModel.loggedIn(!1);Trelloviz.viewModel.showSpinner(!1)};
Trelloviz.trelloLogin=function(){Trelloviz.viewModel.showSpinner(!0);Trello.authorize({interactive:!0,type:"popup",success:Trelloviz.onAuthorize,error:Trelloviz.onAuthorizeError,expiration:"1day",scope:{read:!0,write:!1}})};Trelloviz.onShowActionForBoard=function(a){Trelloviz.viewModel.showSpinner(!0);Trello.get("boards/"+a+"/actions",{limit:"1000"},Trelloviz.viewModel.setNewData)};
Trelloviz.showBoards=function(a){Trelloviz.viewModel.showSpinner(!1);var b=[],c={id:a[0].id,name:a[0].name};$("#selectBoardCombo").empty();$("#btnShowChart").click(function(){Trelloviz.onShowActionForBoard(c.id)});$.each(a,function(a,d){var e=$("<option value="+d.id+">").text(d.name).appendTo("#selectBoardCombo");b.push(e[0]);$(e).click(function(a){c.id=a.target.value;c.name=a.target.text})})};
Trelloviz.showGraphic=function(a){$("#graphic").empty();$('<div id="viz_container" style="min-height: 700px">').appendTo("#graphic");$('<div id="viz_canvas" style="min-height: 700px">').appendTo("#viz_container");var b=new $jit.AreaChart({injectInto:"viz_canvas",animate:!0,Margin:{top:5,left:5,right:5,bottom:5},labelOffset:10,showAggregates:!0,showLabels:!0,type:"stacked:gradient",Tips:{enable:!0,onShow:function(a,b){$(a).empty();$("<span>").addClass("label").addClass("label-info").text(""+b.name+
" ("+b.value+")").appendTo(a)}},filterOnClick:!1,restoreOnRightClick:!0});b.loadJSON(a);return b};(function(){"undefined"!==typeof Storage&&(Trelloviz.viewModel.html5LocalStorageAvailable(!0),localStorage.trelloviz_api_key&&Trelloviz.viewModel.apiKey(localStorage.trelloviz_api_key))})();"undefined"!=typeof ko&&(ko.bindingHandlers.colorPicker={init:function(a,b){var c=b();$(a).val(ko.utils.unwrapObservable(c));$(a).colorPicker({onColorChange:function(a,b){c(b);Trelloviz.viewModel.actionListsUpdated()}})},update:function(a,b){$(a).val(ko.utils.unwrapObservable(b()))}});

var TrellovizData=function(){};
TrellovizData.prototype={listOrderIds:[],listOrderNames:[],counterPerList:{},cardToListMap:{},vizDataForJit:{label:[],values:[]},init:function(){this.listOrderIds=[];this.listOrderNames=[];this.counterPerList={};this.cardToListMap={};this.vizDataForJit={label:[],values:[]}},computeVizData_all_lists:function(a){this.init();this.sortTrelloDataByDateAscending(a);for(var b=0;b<a.length;b++)this.processSingleTrelloActionRecord(b,a[b]);this.retrieveLabelNamesFromList();this.cleanupNullValues();return this.vizDataForJit},
cleanupNullValues:function(){this.vizDataForJit.values.forEach(function(a){for(var b=0,d=a.values.length;b<d;b++)a.values[b]=a.values[b]||0},this)},sortTrelloDataByDateAscending:function(a){a.sort(function(a,d){var c=Date.parse(a.date),e=Date.parse(d.date);return c<e?-1:c>e?1:0})},actionArchiveCard:function(a){this.counterPerList[this.cardToListMap[a.data.card.id]]--},actionCreateCard:function(a){var b=a.data.list.id;this.ensureListIsRegistered(a.data.list);this.counterPerList[b]++;this.cardToListMap[a.data.card.id]=
b},ensureListIsRegistered:function(a){this.counterPerList[a.id]||(this.counterPerList[a.id]=0,this.listOrderIds.push(a.id),this.listOrderNames.push(a.name))},actionMoveCard:function(a){var b=a.data.listBefore.id,d=a.data.listAfter.id;this.ensureListIsRegistered(a.data.listBefore);this.ensureListIsRegistered(a.data.listAfter);if(0>=this.counterPerList[b]){this.counterPerList[b]=1;for(var a=this.listOrderIds.indexOf(b),c=this.vizDataForJit.values.length-1;0<=c;c--)this.vizDataForJit.values[c].values[a]=
(this.vizDataForJit.values[c].values[a]||0)+1}this.counterPerList[b]--;this.counterPerList[d]++},processSingleTrelloActionRecord:function(a,b){var d=b.date,c=!1;if("createCard"==b.type)c=!0,this.actionCreateCard(b);else if("updateCard"==b.type){if(!0==b.data.card.closed&&!1==b.data.old.closed&&(c=!0,this.actionArchiveCard(b)),b.data.listAfter&&b.data.listBefore)c=!0,this.actionMoveCard(b)}else console.error(b.type);if(c){for(var c=[],e=0;e<this.listOrderIds.length;e++)c.push(this.counterPerList[this.listOrderIds[e]]);
this.vizDataForJit.values.push({label:d,values:c})}},retrieveLabelNamesFromList:function(){for(var a=0;a<this.listOrderNames.length;a++)this.vizDataForJit.label.push(this.listOrderNames[a])}};
